{"version":3,"sources":["Box.js","NewBoxForm.js","Boxlist.js","App.js","reportWebVitals.js","index.js"],"names":["Box","className","style","height","this","props","width","backgroundColor","color","onClick","removeBox","Component","NewBoxForm","state","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","newBox","id","uuidv4","createBox","onSubmit","htmlFor","type","onChange","BoxList","boxes","createNewBox","filter","box","map","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95af54a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Box.css\";\nclass Box extends Component {\n  render() {\n    return (\n      <div className=\"Box-layout\">\n        <div\n          className=\"Box\"\n          style={{\n            height: `${this.props.height}em`,\n            width: `${this.props.width}em`,\n            backgroundColor: this.props.color\n          }}\n        />\n\n        <button className=\"Box-btn\" onClick={this.props.removeBox}>\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Box;\n// to get a Box to render in Boxlist\n//`${}` to pass in variable's value to string\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./NewBoxForm.css\";\n\nclass NewBoxForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { height: \"\", width: \"\", color: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    let newBox = { ...this.state, id: uuidv4() };\n    this.props.createBox(newBox);\n    this.setState(state => ({\n      height: \"\",\n      width: \"\",\n      color: \"\"\n    }));\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"Form-details\">\n        <div>\n          <label htmlFor=\"height\">Height: </label>\n          <input\n            type=\"text\"\n            name=\"height\"\n            value={this.state.height}\n            onChange={this.handleChange}\n            id=\"height\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"width\">Width: </label>\n          <input\n            type=\"text\"\n            name=\"width\"\n            value={this.state.width}\n            onChange={this.handleChange}\n            id=\"width\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"color\">Color: </label>\n          <input\n            type=\"text\"\n            name=\"color\"\n            value={this.state.color}\n            onChange={this.handleChange}\n            id=\"color\"\n          />\n        </div>\n        <button>Add New Box!</button>\n      </form>\n    );\n  }\n}\nexport default NewBoxForm;\n\n// NewCBoxForm is gonna pass data up to Boxlist\n","import React, { Component } from \"react\";\nimport Box from \"./Box\";\nimport NewBoxForm from \"./NewBoxForm\";\nimport \"./Boxlist.css\";\n\nclass BoxList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { boxes: [] };\n    this.createNewBox = this.createNewBox.bind(this);\n  }\n  /*remove(id) {\n    this.setState({\n      boxes: this.state.boxes.filter(box => box.id !== id)\n    });\n  }*/\n  createNewBox(newBox) {\n    this.setState(state => ({\n      boxes: [...state.boxes, newBox]\n    }));\n  }\n  remove(id) {\n    this.setState({\n      boxes: this.state.boxes.filter(box => box.id != id)\n    });\n  }\n  render() {\n    const boxes = this.state.boxes.map(box => (\n      <Box\n        key={box.id}\n        id={box.id}\n        width={box.width}\n        height={box.height}\n        color={box.color}\n        removeBox={() => this.remove(box.id)} //dont have to bind this.remove in constructor\n      />\n    ));\n    return (\n      <div className=\"Boxlist\">\n        <h1>Color Box Maker </h1>\n        <NewBoxForm createBox={this.createNewBox} />\n        {boxes}\n      </div>\n    );\n  }\n}\n\nexport default BoxList;\n","import React, { Component } from \"react\";\nimport Boxlist from \"./Boxlist\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Boxlist />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}